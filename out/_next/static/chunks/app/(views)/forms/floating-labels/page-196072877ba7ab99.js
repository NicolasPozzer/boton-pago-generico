(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8578],{57062:function(e,l,s){Promise.resolve().then(s.bind(s,78034))},78034:function(e,l,s){"use strict";s.r(l);var a=s(57437),n=s(75555),r=s(72365),t=s(88e3),i=s(82089),o=s(1893),c=s(75654),d=s(40777),h=s(61450),x=s(32987),j=s(12789),m=s(78210);l.default=()=>(0,a.jsxs)(n.r,{children:[(0,a.jsx)(r.b,{xs:12,children:(0,a.jsxs)(t.x,{className:"mb-4",children:[(0,a.jsx)(i.b,{children:(0,a.jsx)("strong",{children:"React Floating labels"})}),(0,a.jsxs)(o.s,{children:[(0,a.jsxs)("p",{className:"text-body-secondary small",children:["Wrap a pair of ",(0,a.jsx)("code",{children:"<CFormInput>"})," and ",(0,a.jsx)("code",{children:"<CFormLabel>"})," ","elements in ",(0,a.jsx)("code",{children:"CFormFloating"})," to enable floating labels with textual form fields. A ",(0,a.jsx)("code",{children:"placeholder"})," is required on each ",(0,a.jsx)("code",{children:"<CFormInput>"})," ","as our method of CSS-only floating labels uses the ",(0,a.jsx)("code",{children:":placeholder-shown"})," ","pseudo-element. Also note that the ",(0,a.jsx)("code",{children:"<CFormInput>"})," must come first so we can utilize a sibling selector (e.g., ",(0,a.jsx)("code",{children:"~"}),")."]}),(0,a.jsxs)(m.q3,{href:"forms/floating-labels",children:[(0,a.jsxs)(c.j,{className:"mb-3",children:[(0,a.jsx)(d.j,{type:"email",id:"floatingInput",placeholder:"name@example.com"}),(0,a.jsx)(h.L,{htmlFor:"floatingInput",children:"Email address"})]}),(0,a.jsxs)(c.j,{children:[(0,a.jsx)(d.j,{type:"password",id:"floatingPassword",placeholder:"Password"}),(0,a.jsx)(h.L,{htmlFor:"floatingPassword",children:"Password"})]})]}),(0,a.jsxs)("p",{className:"text-body-secondary small",children:["When there's a ",(0,a.jsx)("code",{children:"value"})," already defined, ",(0,a.jsx)("code",{children:"<CFormLabel>"}),"s will automatically adjust to their floated position."]}),(0,a.jsx)(m.q3,{href:"forms/floating-labels",children:(0,a.jsxs)(c.j,{children:[(0,a.jsx)(d.j,{type:"email",id:"floatingInputValue",placeholder:"name@example.com",defaultValue:"test@example.com"}),(0,a.jsx)(h.L,{htmlFor:"floatingInputValue",children:"Input with value"})]})})]})]})}),(0,a.jsx)(r.b,{xs:12,children:(0,a.jsxs)(t.x,{className:"mb-4",children:[(0,a.jsxs)(i.b,{children:[(0,a.jsx)("strong",{children:"React Floating labels"})," ",(0,a.jsx)("small",{children:"Textareas"})]}),(0,a.jsxs)(o.s,{children:[(0,a.jsxs)("p",{className:"text-body-secondary small",children:["By default, ",(0,a.jsx)("code",{children:"<CFormTextarea>"}),"s will be the same height as"," ",(0,a.jsx)("code",{children:"<CFormInput>"}),"s."]}),(0,a.jsx)(m.q3,{href:"forms/floating-labels#textareas",children:(0,a.jsxs)(c.j,{children:[(0,a.jsx)(x.P,{id:"floatingTextarea",placeholder:"Leave a comment here"}),(0,a.jsx)(h.L,{htmlFor:"floatingTextarea",children:"Comments"})]})}),(0,a.jsxs)("p",{className:"text-body-secondary small",children:["To set a custom height on your ",(0,a.jsx)("code",{children:"<CFormTextarea;>"}),", do not use the"," ",(0,a.jsx)("code",{children:"rows"})," attribute. Instead, set an explicit ",(0,a.jsx)("code",{children:"height"})," (either inline or via custom CSS)."]}),(0,a.jsx)(m.q3,{href:"forms/floating-labels#textareas",children:(0,a.jsxs)(c.j,{children:[(0,a.jsx)(x.P,{placeholder:"Leave a comment here",id:"floatingTextarea2",style:{height:"100px"}}),(0,a.jsx)(h.L,{htmlFor:"floatingTextarea2",children:"Comments"})]})})]})]})}),(0,a.jsx)(r.b,{xs:12,children:(0,a.jsxs)(t.x,{className:"mb-4",children:[(0,a.jsxs)(i.b,{children:[(0,a.jsx)("strong",{children:"React Floating labels"})," ",(0,a.jsx)("small",{children:"Selects"})]}),(0,a.jsxs)(o.s,{children:[(0,a.jsxs)("p",{className:"text-body-secondary small",children:["Other than ",(0,a.jsx)("code",{children:"<CFormInput>"}),", floating labels are only available on"," ",(0,a.jsx)("code",{children:"<CFormSelect>"}),"s. They work in the same way, but unlike"," ",(0,a.jsx)("code",{children:"<CFormInput>"}),"s, they'll always show the"," ",(0,a.jsx)("code",{children:"<CFormLabel>"})," in its floated state."," ",(0,a.jsxs)("strong",{children:["Selects with ",(0,a.jsx)("code",{children:"size"})," and ",(0,a.jsx)("code",{children:"multiple"})," are not supported."]})]}),(0,a.jsx)(m.q3,{href:"forms/floating-labels#selects",children:(0,a.jsxs)(c.j,{children:[(0,a.jsxs)(j.L,{id:"floatingSelect","aria-label":"Floating label select example",children:[(0,a.jsx)("option",{children:"Open this select menu"}),(0,a.jsx)("option",{value:"1",children:"One"}),(0,a.jsx)("option",{value:"2",children:"Two"}),(0,a.jsx)("option",{value:"3",children:"Three"})]}),(0,a.jsx)(h.L,{htmlFor:"floatingSelect",children:"Works with selects"})]})})]})]})}),(0,a.jsx)(r.b,{xs:12,children:(0,a.jsxs)(t.x,{className:"mb-4",children:[(0,a.jsxs)(i.b,{children:[(0,a.jsx)("strong",{children:"React Floating labels"})," ",(0,a.jsx)("small",{children:"Layout"})]}),(0,a.jsxs)(o.s,{children:[(0,a.jsx)("p",{className:"text-body-secondary small",children:"When working with the CoreUI for Bootstrap grid system, be sure to place form elements within column classes."}),(0,a.jsx)(m.q3,{href:"forms/floating-labels#layout",children:(0,a.jsxs)(n.r,{xs:{gutter:2},children:[(0,a.jsx)(r.b,{md:!0,children:(0,a.jsxs)(c.j,{children:[(0,a.jsx)(d.j,{type:"email",id:"floatingInputGrid",placeholder:"name@example.com",defaultValue:"email@example.com"}),(0,a.jsx)(h.L,{htmlFor:"floatingInputGrid",children:"Email address"})]})}),(0,a.jsx)(r.b,{md:!0,children:(0,a.jsxs)(c.j,{children:[(0,a.jsxs)(j.L,{id:"floatingSelectGrid","aria-label":"Floating label select example",children:[(0,a.jsx)("option",{children:"Open this select menu"}),(0,a.jsx)("option",{value:"1",children:"One"}),(0,a.jsx)("option",{value:"2",children:"Two"}),(0,a.jsx)("option",{value:"3",children:"Three"})]}),(0,a.jsx)(h.L,{htmlFor:"floatingSelectGrid",children:"Works with selects"})]})})]})})]})]})})]})}},function(e){e.O(0,[7695,6653,2846,7138,5045,5740,6488,8210,2971,7023,1744],function(){return e(e.s=57062)}),_N_E=e.O()}]);